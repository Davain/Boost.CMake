##########################################################################
# Copyright (C) 2011 Daniel Pfeifer <daniel@pfeifer-mail.de>             #
#                                                                        #
# Distributed under the Boost Software License, Version 1.0.             #
# See accompanying file LICENSE_1_0.txt or copy at                       #
#   http://www.boost.org/LICENSE_1_0.txt                                 #
##########################################################################

include(CMakeParseArguments)

set(_boost_cmake_templates_dir "${CMAKE_CURRENT_LIST_DIR}/templates")

# Export of Boost projects
function(boost_export)
  set(parameters
    BOOST_DEPENDS
    CODE
    DEFINITIONS
    DEPENDS
    INCLUDE_DIRS
    MODULE_PATH
    TARGETS
    )
  cmake_parse_arguments(EXPORT "" "VERSION" "${parameters}" ${ARGN})

  set(_header_only FALSE)
  set(_is_tool FALSE)

  if(EXPORT_INCLUDE_DIRS AND NOT EXPORT_TARGETS)
    set(_header_only TRUE)
  elseif(NOT EXPORT_INCLUDE_DIRS AND EXPORT_TARGETS)
    set(_is_tool TRUE)
  endif()

  set(_find_package )
  set(_definitions  ${EXPORT_DEFINITIONS})
  set(_include_dirs )
  set(_libraries    )
  set(_module_path  )
  
  foreach(path ${EXPORT_INCLUDE_DIRS})
    get_filename_component(path "${path}" ABSOLUTE)
    set(_include_dirs "${_include_dirs}\"${path}\"\n  ")
  endforeach(path)

  foreach(path ${EXPORT_MODULE_PATH})
    get_filename_component(path "${path}" ABSOLUTE)
    set(_module_path  "${_module_path}\"${path}\"\n  ")
  endforeach(path)

  foreach(depends ${EXPORT_DEPENDS})
    string(FIND ${depends} " " index)
    string(SUBSTRING ${depends} 0 ${index} name)
    set(_find_package "${_find_package}\nfind_package(${depends})")
    set(_definitions  "${_definitions}\${${name}_DEFINITIONS}\n  ")
    set(_include_dirs "${_include_dirs}\${${name}_INCLUDE_DIRS}\n  ")
    set(_libraries    "${_libraries}\${${name}_LIBRARIES}\n  ")
    #set(_module_path  "${_module_path}\${${name}_MODULE_PATH}\n  ")
  endforeach(depends)

  if(EXPORT_BOOST_DEPENDS)
    set(_find_package "${_find_package}\nfind_package(Boost\n  COMPONENTS\n")
    foreach(depends ${EXPORT_BOOST_DEPENDS})
      set(_find_package "${_find_package}    ${depends}\n")
    endforeach(depends)
    set(_find_package "${_find_package}  NO_MODULE\n  )\n")
    set(_definitions  "${_definitions}\${Boost_DEFINITIONS}\n  ")
    set(_include_dirs "${_include_dirs}\${Boost_INCLUDE_DIRS}\n  ")
    set(_libraries    "${_libraries}\${Boost_LIBRARIES}\n  ")
    set(_module_path  "${_module_path}\${Boost_MODULE_PATH}\n  ")
  endif(EXPORT_BOOST_DEPENDS)

  set(_include_guard "__${CMAKE_PROJECT_NAME}Config_included")
  set(_export_file "${CMAKE_CURRENT_BINARY_DIR}/${CMAKE_PROJECT_NAME}Config.cmake")

  file(WRITE "${_export_file}"
    "# Generated by Boost.CMake\n\n"
    "if(${_include_guard})\n"
    "  return()\n"
    "endif(${_include_guard})\n"
    "set(${_include_guard} TRUE)\n\n"
    )

  if(_find_package)
    file(APPEND "${_export_file}"
      "${_find_package}\n"
      )
  endif(_find_package)

  if(_definitions)
    file(APPEND "${_export_file}"
      "set(${CMAKE_PROJECT_NAME}_DEFINITIONS\n  ${_definitions})\n"
      )
  endif(_definitions)

  if(_include_dirs)
    file(APPEND "${_export_file}"
      "set(${CMAKE_PROJECT_NAME}_INCLUDE_DIRS\n  ${_include_dirs})\n"
      )
  endif(_include_dirs)

  if(_libraries)
    file(APPEND "${_export_file}"
      "set(${CMAKE_PROJECT_NAME}_LIBRARIES\n  ${_libraries})\n"
      )
  endif(_libraries)

  if(_module_path)
    file(APPEND "${_export_file}"
      "set(${CMAKE_PROJECT_NAME}_MODULE_PATH\n  ${_module_path})\n"
      )
  endif(_module_path)

  foreach(code ${EXPORT_CODE})
    file(APPEND "${_export_file}" "${code}")
  endforeach(code)

  export(PACKAGE ${CMAKE_PROJECT_NAME})
endfunction(boost_export)
